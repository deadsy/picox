#!/usr/bin/env python3
"""
Generate cosine lookup table.
"""

import math
import sys

max_s32 = (1 << 31) - 1
min_s32 = -(1 << 31)

max_s16 = (1 << 15) - 1
min_s16 = -(1 << 15)

def float_to_q15(x):
  xi = int(x * float(1 << 15))
  if xi > max_s16:
    return max_s16
  if xi < min_s16:
    return min_s16
  return xi

def float_to_q31(x):
  xi = int(x * float(1 << 31))
  if xi > max_s32:
    return max_s32
  if xi < min_s32:
    return min_s32
  return xi

def cos_func(i, n):
  k = float(1 << n)
  yf = math.cos(float(i) * 2.0 * math.pi / k)
  yi = float_to_q15(yf)
  return yi

def gen_lut(name, bits, func):
  """output a table with y values"""
  print('/* generated by ./tools/lut.py */')
  print('#define %s_BITS (%dU)' % (name, bits))
  print('#define %s_SIZE (1U << %s_BITS)' % (name, name))
  print('static const int16_t %s_data[%s_SIZE + 1] = {' % (name, name))

  n = 1 << bits

  for i in range(n + 1):
    if i == 0:
      sys.stdout.write('\t')
    if i != 0 and i % 8 == 0:
      sys.stdout.write('\r\n\t')
    sys.stdout.write('%d, ' % func(i))

  sys.stdout.write('\r\n};\r\n')


def main():
  n = 7
  gen_lut("COS_LUT", n, lambda i: cos_func(i, n))

main()
